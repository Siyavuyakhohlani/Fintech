version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: escrow-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: escrow_service
      POSTGRES_USER: escrow_user
      POSTGRES_PASSWORD: escrow_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - escrow-network

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: escrow-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - escrow-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: escrow-backend
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=escrow_service
      - DB_USER=escrow_user
      - DB_PASSWORD=escrow_password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
    networks:
      - escrow-network
    command: npm run dev

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: escrow-frontend
    restart: unless-stopped
    environment:
      - VITE_API_URL=http://localhost:5000/api
      - VITE_NODE_ENV=development
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - escrow-network
    command: npm run dev

  # pgAdmin for database management (optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: escrow-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@escrow.local
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8080:80"
    depends_on:
      - postgres
    networks:
      - escrow-network
    profiles:
      - tools

volumes:
  postgres_data:
  redis_data:

networks:
  escrow-network:
    driver: bridge
